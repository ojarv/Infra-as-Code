# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant - Hyper-V config. Credits / Sources:
# https://terokarvinen.com/2021/two-machine-virtual-network-with-debian-11-bullseye-and-vagrant/
# https://terokarvinen.com/2023/salt-vagrant/
# https://github.com/Shinzu/vagrant-hyperv/blob/master/Vagrantfile
# https://docs.saltproject.io/salt/install-guide/en/latest/topics/install-by-operating-system/debian.html
# https://developer.hashicorp.com/vagrant/docs/providers/hyperv/configuration
# https://developer.hashicorp.com/vagrant/docs/provisioning/file
# https://developer.hashicorp.com/vagrant/docs/triggers/configuration
# https://docs.vagrantup.com
# https://docs.saltproject.io/salt/install-guide/en/latest/topics/install-by-operating-system/windows.html#windows-nullsoft-exe-install-options
# https://stackoverflow.com/questions/47110728/powershell-download-and-run-exe-file


$master = <<-MASTER
sudo curl -fsSL -o /etc/apt/keyrings/salt-archive-keyring-2023.gpg https://repo.saltproject.io/salt/py3/debian/11/amd64/SALT-PROJECT-GPG-PUBKEY-2023.gpg
echo "deb [signed-by=/etc/apt/keyrings/salt-archive-keyring-2023.gpg arch=amd64] https://repo.saltproject.io/salt/py3/debian/11/amd64/latest bullseye main" | sudo tee /etc/apt/sources.list.d/salt.list
sudo apt-get -qq update
sudo apt-get -qqy install salt-master
sudo systemctl restart salt-master
sudo git clone https://github.com/saltstack/salt-winrepo-ng.git /srv/salt/win/repo-ng
MASTER

Vagrant.configure("2") do |config|
	config.vm.synced_folder ".", "/vagrant", disabled: true
	config.vm.define "master", primary: true do |master|
		master.vm.box = "generic/debian12"
		master.vm.hostname = "master"
		master.vm.provision :shell, inline: $master
		master.vm.provider "hyperv" do |h|
			h.linked_clone = true
			h.cpus = 6
			h.maxmemory = 1536
			h.memory = 512
			h.vmname = "master"
		end
	
		master.vm.provision "file",
			source: "./init.sls",
			destination: "/tmp/sls/init.sls",
			run: "always"

		master.vm.provision "file",
			source: "./jinja.sls",
			destination: "/tmp/sls/jinja.sls",
			run: "always"

		master.vm.provision "shell",
			inline: "sudo mkdir -p /srv/salt/winpro && sudo cp -R /tmp/sls/. /srv/salt/winpro/",
			run: "always"
			
		master.trigger.after :up do |t|
			t.run = {inline: './master_ip.ps1'}
			t.only_on = "master"
		end
	end


	config.vm.define "win11", primary: true do |win11|
		win11.vm.box = "gusztavvargadr/windows-11"
		win11.vm.hostname = "Win11"
		win11.vm.provider "hyperv" do |h|
			h.linked_clone = true
			h.cpus = 6
			h.maxmemory = 8096
			h.memory = 2048
			h.vmname = "Win11"
		end
		
		win11.vm.provision "file",
			source: "./minion",
			destination: "C:/ProgramData/Salt Project/Salt/conf/minion",
			run: "always"
			
		win11.vm.provision "shell",
			inline: 'Set-Location -Path "C:/Users/vagrant"; Invoke-WebRequest -Uri "https://repo.saltproject.io/salt/py3/windows/latest/Salt-Minion-3006.4-Py3-AMD64-Setup.exe" -OutFile "setup.exe"; Start-Process -Wait -FilePath ".\setup.exe" -ArgumentList "/S"; Remove-Item -Path "setup.exe" -Force',
			run: "once"
			
		win11.vm.provision "shell",
			inline: 'Restart-Service -Name "salt-minion" -Force; slmgr.vbs /ato',
			run: "always"
	end
end